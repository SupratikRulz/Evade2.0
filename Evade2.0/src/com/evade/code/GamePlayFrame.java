/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.evade.code;

import java.util.Random;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.Dimension;

public class GamePlayFrame extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form GamePlayFrame
     */
	static int I,J,I2,J2;
    static int present[][]={{2,2,2,2,2,2,2,2,2,0},
							{2,2,2,0,2,2,2,2,2,2},
							{2,2,2,2,2,2,2,2,2,2},
							{0,2,2,2,2,2,2,2,0,2},
							{2,2,2,0,2,2,2,2,2,2},
							{2,2,2,2,2,2,0,2,2,0},
							{2,2,2,2,2,2,2,2,2,2},
							{0,2,2,2,2,2,2,2,2,2},
							{2,2,2,2,2,0,2,2,2,2},
							{2,2,2,0,2,2,2,2,2,2}};

    static int v[][] = new int [10][10];
    static int C;
    static int pbestA,pbestB;
	
    public GamePlayFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        l10 = new javax.swing.JLabel();
        l11 = new javax.swing.JLabel();
        l12 = new javax.swing.JLabel();
        l13 = new javax.swing.JLabel();
        l14 = new javax.swing.JLabel();
        l15 = new javax.swing.JLabel();
        l16 = new javax.swing.JLabel();
        l17 = new javax.swing.JLabel();
        l18 = new javax.swing.JLabel();
        l19 = new javax.swing.JLabel();
        l20 = new javax.swing.JLabel();
        l21 = new javax.swing.JLabel();
        l22 = new javax.swing.JLabel();
        l23 = new javax.swing.JLabel();
        l24 = new javax.swing.JLabel();
        l25 = new javax.swing.JLabel();
        l26 = new javax.swing.JLabel();
        l27 = new javax.swing.JLabel();
        l28 = new javax.swing.JLabel();
        l29 = new javax.swing.JLabel();
        l30 = new javax.swing.JLabel();
        l31 = new javax.swing.JLabel();
        l32 = new javax.swing.JLabel();
        l33 = new javax.swing.JLabel();
        l34 = new javax.swing.JLabel();
        l35 = new javax.swing.JLabel();
        l36 = new javax.swing.JLabel();
        l37 = new javax.swing.JLabel();
        l38 = new javax.swing.JLabel();
        l39 = new javax.swing.JLabel();
        l40 = new javax.swing.JLabel();
        l41 = new javax.swing.JLabel();
        l42 = new javax.swing.JLabel();
        l43 = new javax.swing.JLabel();
        l44 = new javax.swing.JLabel();
        l45 = new javax.swing.JLabel();
        l46 = new javax.swing.JLabel();
        l47 = new javax.swing.JLabel();
        l48 = new javax.swing.JLabel();
        l49 = new javax.swing.JLabel();
        l50 = new javax.swing.JLabel();
        l51 = new javax.swing.JLabel();
        l52 = new javax.swing.JLabel();
        l53 = new javax.swing.JLabel();
        l54 = new javax.swing.JLabel();
        l55 = new javax.swing.JLabel();
        l56 = new javax.swing.JLabel();
        l57 = new javax.swing.JLabel();
        l58 = new javax.swing.JLabel();
        l59 = new javax.swing.JLabel();
        l60 = new javax.swing.JLabel();
        l61 = new javax.swing.JLabel();
        l62 = new javax.swing.JLabel();
        l63 = new javax.swing.JLabel();
        l64 = new javax.swing.JLabel();
        l65 = new javax.swing.JLabel();
        l66 = new javax.swing.JLabel();
        l67 = new javax.swing.JLabel();
        l68 = new javax.swing.JLabel();
        l69 = new javax.swing.JLabel();
        l70 = new javax.swing.JLabel();
        l71 = new javax.swing.JLabel();
        l72 = new javax.swing.JLabel();
        l73 = new javax.swing.JLabel();
        l74 = new javax.swing.JLabel();
        l75 = new javax.swing.JLabel();
        l76 = new javax.swing.JLabel();
        l77 = new javax.swing.JLabel();
        l78 = new javax.swing.JLabel();
        l79 = new javax.swing.JLabel();
        l80 = new javax.swing.JLabel();
        l81 = new javax.swing.JLabel();
        l82 = new javax.swing.JLabel();
        l83 = new javax.swing.JLabel();
        l84 = new javax.swing.JLabel();
        l85 = new javax.swing.JLabel();
        l86 = new javax.swing.JLabel();
        l87 = new javax.swing.JLabel();
        l88 = new javax.swing.JLabel();
        l89 = new javax.swing.JLabel();
        l90 = new javax.swing.JLabel();
        l91 = new javax.swing.JLabel();
        l92 = new javax.swing.JLabel();
        l93 = new javax.swing.JLabel();
        l94 = new javax.swing.JLabel();
        l95 = new javax.swing.JLabel();
        l96 = new javax.swing.JLabel();
        l97 = new javax.swing.JLabel();
        l98 = new javax.swing.JLabel();
        l99 = new javax.swing.JLabel();
        l100 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Evade");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new Dimension(1100, 530));
        setMinimumSize(new Dimension(1100, 530));
        setPreferredSize(new Dimension(600, 530));
        setResizable(false);
        getContentPane().setLayout(null);

        //l1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/SPRITE.PNG"))); // NOI18N
        getContentPane().add(l1);
        l1.setBounds(0, 0, 50, 50);
        getContentPane().add(l2);
        l2.setBounds(50, 0, 50, 50);
        getContentPane().add(l3);
        l3.setBounds(100, 0, 50, 50);
        getContentPane().add(l4);
        l4.setBounds(150, 0, 50, 50);
        getContentPane().add(l5);
        l5.setBounds(200, 0, 50, 50);
        getContentPane().add(l6);
        l6.setBounds(250, 0, 50, 50);
        getContentPane().add(l7);
        l7.setBounds(300, 0, 50, 50);
        getContentPane().add(l8);
        l8.setBounds(350, 0, 50, 50);
        getContentPane().add(l9);
        l9.setBounds(400, 0, 50, 50);
        getContentPane().add(l10);
        l10.setBounds(450, 0, 50, 50);
        getContentPane().add(l11);
        l11.setBounds(0, 50, 50, 50);
        getContentPane().add(l12);
        l12.setBounds(50, 50, 50, 50);
        getContentPane().add(l13);
        l13.setBounds(100, 50, 50, 50);
        getContentPane().add(l14);
        l14.setBounds(150, 50, 50, 50);
        getContentPane().add(l15);
        l15.setBounds(200, 50, 50, 50);
        getContentPane().add(l16);
        l16.setBounds(250, 50, 50, 50);
        getContentPane().add(l17);
        l17.setBounds(300, 50, 50, 50);
        getContentPane().add(l18);
        l18.setBounds(350, 50, 50, 50);
        getContentPane().add(l19);
        l19.setBounds(400, 50, 50, 50);
        getContentPane().add(l20);
        l20.setBounds(450, 50, 50, 50);
        getContentPane().add(l21);
        l21.setBounds(0, 100, 50, 50);
        getContentPane().add(l22);
        l22.setBounds(50, 100, 50, 50);
        getContentPane().add(l23);
        l23.setBounds(100, 100, 50, 50);
        getContentPane().add(l24);
        l24.setBounds(150, 100, 50, 50);
        getContentPane().add(l25);
        l25.setBounds(200, 100, 50, 50);
        getContentPane().add(l26);
        l26.setBounds(250, 100, 50, 50);
        getContentPane().add(l27);
        l27.setBounds(300, 100, 50, 50);
        getContentPane().add(l28);
        l28.setBounds(350, 100, 50, 50);
        getContentPane().add(l29);
        l29.setBounds(400, 100, 50, 50);
        getContentPane().add(l30);
        l30.setBounds(450, 100, 50, 50);
        getContentPane().add(l31);
        l31.setBounds(0, 150, 50, 50);
        getContentPane().add(l32);
        l32.setBounds(50, 150, 50, 50);
        getContentPane().add(l33);
        l33.setBounds(100, 150, 50, 50);
        getContentPane().add(l34);
        l34.setBounds(150, 150, 50, 50);
        getContentPane().add(l35);
        l35.setBounds(200, 150, 50, 50);
        getContentPane().add(l36);
        l36.setBounds(250, 150, 50, 50);
        getContentPane().add(l37);
        l37.setBounds(300, 150, 50, 50);
        getContentPane().add(l38);
        l38.setBounds(350, 150, 50, 50);
        getContentPane().add(l39);
        l39.setBounds(400, 150, 50, 50);
        getContentPane().add(l40);
        l40.setBounds(450, 150, 50, 50);
        getContentPane().add(l41);
        l41.setBounds(0, 200, 50, 50);
        getContentPane().add(l42);
        l42.setBounds(50, 200, 50, 50);
        getContentPane().add(l43);
        l43.setBounds(100, 200, 50, 50);
        getContentPane().add(l44);
        l44.setBounds(150, 200, 50, 50);
        getContentPane().add(l45);
        l45.setBounds(200, 200, 50, 50);
        getContentPane().add(l46);
        l46.setBounds(250, 200, 50, 50);
        getContentPane().add(l47);
        l47.setBounds(300, 200, 50, 50);
        getContentPane().add(l48);
        l48.setBounds(350, 200, 50, 50);
        getContentPane().add(l49);
        l49.setBounds(400, 200, 50, 50);
        getContentPane().add(l50);
        l50.setBounds(450, 200, 50, 50);
        getContentPane().add(l51);
        l51.setBounds(0, 250, 50, 50);
        getContentPane().add(l52);
        l52.setBounds(50, 250, 50, 50);
        getContentPane().add(l53);
        l53.setBounds(100, 250, 50, 50);
        getContentPane().add(l54);
        l54.setBounds(150, 250, 50, 50);
        getContentPane().add(l55);
        l55.setBounds(200, 250, 50, 50);
        getContentPane().add(l56);
        l56.setBounds(250, 250, 50, 50);
        getContentPane().add(l57);
        l57.setBounds(300, 250, 50, 50);
        getContentPane().add(l58);
        l58.setBounds(350, 250, 50, 50);
        getContentPane().add(l59);
        l59.setBounds(400, 250, 50, 50);
        getContentPane().add(l60);
        l60.setBounds(450, 250, 50, 50);
        getContentPane().add(l61);
        l61.setBounds(0, 300, 50, 50);
        getContentPane().add(l62);
        l62.setBounds(50, 300, 50, 50);
        getContentPane().add(l63);
        l63.setBounds(100, 300, 50, 50);
        getContentPane().add(l64);
        l64.setBounds(150, 300, 50, 50);
        getContentPane().add(l65);
        l65.setBounds(200, 300, 50, 50);
        getContentPane().add(l66);
        l66.setBounds(250, 300, 50, 50);
        getContentPane().add(l67);
        l67.setBounds(300, 300, 50, 50);
        getContentPane().add(l68);
        l68.setBounds(350, 300, 50, 50);
        getContentPane().add(l69);
        l69.setBounds(400, 300, 50, 50);
        getContentPane().add(l70);
        l70.setBounds(450, 300, 50, 50);
        getContentPane().add(l71);
        l71.setBounds(0, 350, 50, 50);
        getContentPane().add(l72);
        l72.setBounds(50, 350, 50, 50);
        getContentPane().add(l73);
        l73.setBounds(100, 350, 50, 50);
        getContentPane().add(l74);
        l74.setBounds(150, 350, 50, 50);
        getContentPane().add(l75);
        l75.setBounds(200, 350, 50, 50);
        getContentPane().add(l76);
        l76.setBounds(250, 350, 50, 50);
        getContentPane().add(l77);
        l77.setBounds(300, 350, 50, 50);
        getContentPane().add(l78);
        l78.setBounds(350, 350, 50, 50);
        getContentPane().add(l79);
        l79.setBounds(400, 350, 50, 50);
        getContentPane().add(l80);
        l80.setBounds(450, 350, 50, 50);
        getContentPane().add(l81);
        l81.setBounds(0, 400, 50, 50);
        getContentPane().add(l82);
        l82.setBounds(50, 400, 50, 50);
        getContentPane().add(l83);
        l83.setBounds(100, 400, 50, 50);
        getContentPane().add(l84);
        l84.setBounds(150, 400, 50, 50);
        getContentPane().add(l85);
        l85.setBounds(200, 400, 50, 50);
        getContentPane().add(l86);
        l86.setBounds(250, 400, 50, 50);
        getContentPane().add(l87);
        l87.setBounds(300, 400, 50, 50);
        getContentPane().add(l88);
        l88.setBounds(350, 400, 50, 50);
        getContentPane().add(l89);
        l89.setBounds(400, 400, 50, 50);
        getContentPane().add(l90);
        l90.setBounds(450, 400, 50, 50);
        getContentPane().add(l91);
        l91.setBounds(0, 450, 50, 50);
        getContentPane().add(l92);
        l92.setBounds(50, 450, 50, 50);
        getContentPane().add(l93);
        l93.setBounds(100, 450, 50, 50);
        getContentPane().add(l94);
        l94.setBounds(150, 450, 50, 50);
        getContentPane().add(l95);
        l95.setBounds(200, 450, 50, 50);
        getContentPane().add(l96);
        l96.setBounds(250, 450, 50, 50);
        getContentPane().add(l97);
        l97.setBounds(300, 450, 50, 50);
        getContentPane().add(l98);
        l98.setBounds(350, 450, 50, 50);
        getContentPane().add(l99);
        l99.setBounds(400, 450, 50, 50);
        getContentPane().add(l100);
        l100.setBounds(450, 450, 50, 50);
        
        
        
        
        
        
        
        m1 = new JLabel("");
        m1.setBounds(590, 0, 50, 50);
        getContentPane().add(m1);
        
        m2 = new JLabel("");
        m2.setBounds(640, 0, 50, 50);
        getContentPane().add(m2);
        
        m3 = new JLabel("");
        m3.setBounds(690, 0, 50, 50);
        getContentPane().add(m3);
        
        m4 = new JLabel("");
        m4.setBounds(740, 0, 50, 50);
        getContentPane().add(m4);
        
        m5 = new JLabel("");
        m5.setBounds(790, 0, 50, 50);
        getContentPane().add(m5);
        
        m6 = new JLabel("");
        m6.setBounds(840, 0, 50, 50);
        getContentPane().add(m6);
        
        m7 = new JLabel("");
        m7.setBounds(890, 0, 50, 50);
        getContentPane().add(m7);
        
        m8 = new JLabel("");
        m8.setBounds(940, 0, 50, 50);
        getContentPane().add(m8);
        
        m9 = new JLabel("");
        m9.setBounds(990, 0, 50, 50);
        getContentPane().add(m9);
        
        m10 = new JLabel("");
        m10.setBounds(1040, 0, 50, 50);
        getContentPane().add(m10);
        
        m11 = new JLabel("");
        m11.setBounds(590, 50, 50, 50);
        getContentPane().add(m11);
        
        m12 = new JLabel("");
        m12.setBounds(640, 50, 50, 50);
        getContentPane().add(m12);
        
        m13 = new JLabel("");
        m13.setBounds(690, 50, 50, 50);
        getContentPane().add(m13);
        
        m14 = new JLabel("");
        m14.setBounds(740, 50, 50, 50);
        getContentPane().add(m14);
        
        m15 = new JLabel("");
        m15.setBounds(790, 50, 50, 50);
        getContentPane().add(m15);
        
        m16 = new JLabel("");
        m16.setBounds(840, 50, 50, 50);
        getContentPane().add(m16);
        
        m17 = new JLabel("");
        m17.setBounds(890, 50, 50, 50);
        getContentPane().add(m17);
        
        m18 = new JLabel("");
        m18.setBounds(940, 50, 50, 50);
        getContentPane().add(m18);
        
        m19 = new JLabel("");
        m19.setBounds(990, 50, 50, 50);
        getContentPane().add(m19);
        
        m20 = new JLabel("");
        m20.setBounds(1040, 50, 50, 50);
        getContentPane().add(m20);
        
        m21 = new JLabel("");
        m21.setBounds(590, 100, 50, 50);
        getContentPane().add(m21);
        
        m22 = new JLabel("");
        m22.setBounds(640, 100, 50, 50);
        getContentPane().add(m22);
        
        m23 = new JLabel("");
        m23.setBounds(690, 100, 50, 50);
        getContentPane().add(m23);
        
        m24 = new JLabel("");
        m24.setBounds(740, 100, 50, 50);
        getContentPane().add(m24);
        
        m25 = new JLabel("");
        m25.setBounds(790, 100, 50, 50);
        getContentPane().add(m25);
        
        m26 = new JLabel("");
        m26.setBounds(840, 100, 50, 50);
        getContentPane().add(m26);
        
        m27 = new JLabel("");
        m27.setBounds(890, 100, 50, 50);
        getContentPane().add(m27);
        
        m28 = new JLabel("");
        m28.setBounds(940, 100, 50, 50);
        getContentPane().add(m28);
        
        m29 = new JLabel("");
        m29.setBounds(990, 100, 50, 50);
        getContentPane().add(m29);
        
        m30 = new JLabel("");
        m30.setBounds(1040, 100, 50, 50);
        getContentPane().add(m30);
        
        m31 = new JLabel("");
        m31.setBounds(590, 150, 50, 50);
        getContentPane().add(m31);
        
        m32 = new JLabel("");
        m32.setBounds(640, 150, 50, 50);
        getContentPane().add(m32);
        
        m33 = new JLabel("");
        m33.setBounds(690, 150, 50, 50);
        getContentPane().add(m33);
        
        m34 = new JLabel("");
        m34.setBounds(740, 150, 50, 50);
        getContentPane().add(m34);
        
        m35 = new JLabel("");
        m35.setBounds(790, 150, 50, 50);
        getContentPane().add(m35);
        
        m36 = new JLabel("");
        m36.setBounds(840, 150, 50, 50);
        getContentPane().add(m36);
        
        m37 = new JLabel("");
        m37.setBounds(890, 150, 50, 50);
        getContentPane().add(m37);
        
        m38 = new JLabel("");
        m38.setBounds(940, 150, 50, 50);
        getContentPane().add(m38);
        
        m39 = new JLabel("");
        m39.setBounds(990, 150, 50, 50);
        getContentPane().add(m39);
        
        m40 = new JLabel("");
        m40.setBounds(1040, 150, 50, 50);
        getContentPane().add(m40);
        
        m41 = new JLabel("");
        m41.setBounds(590, 200, 50, 50);
        getContentPane().add(m41);
        
        m42 = new JLabel("");
        m42.setBounds(640, 200, 50, 50);
        getContentPane().add(m42);
        
        m43 = new JLabel("");
        m43.setBounds(690, 200, 50, 50);
        getContentPane().add(m43);
        
        m44 = new JLabel("");
        m44.setBounds(740, 200, 50, 50);
        getContentPane().add(m44);
        
        m45 = new JLabel("");
        m45.setBounds(790, 200, 50, 50);
        getContentPane().add(m45);
        
        m46 = new JLabel("");
        m46.setBounds(840, 200, 50, 50);
        getContentPane().add(m46);
        
        m47 = new JLabel("");
        m47.setBounds(890, 200, 50, 50);
        getContentPane().add(m47);
        
        m48 = new JLabel("");
        m48.setBounds(940, 200, 50, 50);
        getContentPane().add(m48);
        
        m49 = new JLabel("");
        m49.setBounds(990, 200, 50, 50);
        getContentPane().add(m49);
        
        m50 = new JLabel("");
        m50.setBounds(1040, 200, 50, 50);
        getContentPane().add(m50);
        
        m51 = new JLabel("");
        m51.setBounds(590, 250, 50, 50);
        getContentPane().add(m51);
        
        m52 = new JLabel("");
        m52.setBounds(640, 250, 50, 50);
        getContentPane().add(m52);
        
        m53 = new JLabel("");
        m53.setBounds(690, 250, 50, 50);
        getContentPane().add(m53);
        
        m54 = new JLabel("");
        m54.setBounds(740, 250, 50, 50);
        getContentPane().add(m54);
        
        m55 = new JLabel("");
        m55.setBounds(790, 250, 50, 50);
        getContentPane().add(m55);
        
        m56 = new JLabel("");
        m56.setBounds(840, 250, 50, 50);
        getContentPane().add(m56);
        
        m57 = new JLabel("");
        m57.setBounds(890, 250, 50, 50);
        getContentPane().add(m57);
        
        m58 = new JLabel("");
        m58.setBounds(940, 250, 50, 50);
        getContentPane().add(m58);
        
        m59 = new JLabel("");
        m59.setBounds(990, 250, 50, 50);
        getContentPane().add(m59);
        
        m60 = new JLabel("");
        m60.setBounds(1040, 250, 50, 50);
        getContentPane().add(m60);
        
        m61 = new JLabel("");
        m61.setBounds(590, 300, 50, 50);
        getContentPane().add(m61);
        
        m62 = new JLabel("");
        m62.setBounds(640, 300, 50, 50);
        getContentPane().add(m62);
        
        m63 = new JLabel("");
        m63.setBounds(690, 300, 50, 50);
        getContentPane().add(m63);
        
        m64 = new JLabel("");
        m64.setBounds(740, 300, 50, 50);
        getContentPane().add(m64);
        
        m65 = new JLabel("");
        m65.setBounds(790, 300, 50, 50);
        getContentPane().add(m65);
        
        m66 = new JLabel("");
        m66.setBounds(840, 300, 50, 50);
        getContentPane().add(m66);
        
        m67 = new JLabel("");
        m67.setBounds(890, 300, 50, 50);
        getContentPane().add(m67);
        
        m68 = new JLabel("");
        m68.setBounds(940, 300, 50, 50);
        getContentPane().add(m68);
        
        m69 = new JLabel("");
        m69.setBounds(990, 300, 50, 50);
        getContentPane().add(m69);
        
        m70 = new JLabel("");
        m70.setBounds(1040, 300, 50, 50);
        getContentPane().add(m70);
        
        m71 = new JLabel("");
        m71.setBounds(590, 350, 50, 50);
        getContentPane().add(m71);
        
        m72 = new JLabel("");
        m72.setBounds(640, 350, 50, 50);
        getContentPane().add(m72);
        
        m73 = new JLabel("");
        m73.setBounds(690, 350, 50, 50);
        getContentPane().add(m73);
        
        m74 = new JLabel("");
        m74.setBounds(740, 350, 50, 50);
        getContentPane().add(m74);
        
        m75 = new JLabel("");
        m75.setBounds(790, 350, 50, 50);
        getContentPane().add(m75);
        
        m76 = new JLabel("");
        m76.setBounds(840, 350, 50, 50);
        getContentPane().add(m76);
        
        m77 = new JLabel("");
        m77.setBounds(890, 350, 50, 50);
        getContentPane().add(m77);
        
        m78 = new JLabel("");
        m78.setBounds(940, 350, 50, 50);
        getContentPane().add(m78);
        
        m79 = new JLabel("");
        m79.setBounds(990, 350, 50, 50);
        getContentPane().add(m79);
        
        m80 = new JLabel("");
        m80.setBounds(1040, 350, 50, 50);
        getContentPane().add(m80);
        
        m81 = new JLabel("");
        m81.setBounds(590, 400, 50, 50);
        getContentPane().add(m81);
        
        m82 = new JLabel("");
        m82.setBounds(640, 400, 50, 50);
        getContentPane().add(m82);
        
        m83 = new JLabel("");
        m83.setBounds(690, 400, 50, 50);
        getContentPane().add(m83);
        
        m84 = new JLabel("");
        m84.setBounds(740, 400, 50, 50);
        getContentPane().add(m84);
        
        m85 = new JLabel("");
        m85.setBounds(790, 400, 50, 50);
        getContentPane().add(m85);
        
        m86 = new JLabel("");
        m86.setBounds(840, 400, 50, 50);
        getContentPane().add(m86);
        
        m87 = new JLabel("");
        m87.setBounds(890, 400, 50, 50);
        getContentPane().add(m87);
        
        m88 = new JLabel("");
        m88.setBounds(940, 400, 50, 50);
        getContentPane().add(m88);
        
        m89 = new JLabel("");
        m89.setBounds(990, 400, 50, 50);
        getContentPane().add(m89);
        
        m90 = new JLabel("");
        m90.setBounds(1040, 400, 50, 50);
        getContentPane().add(m90);
        
        m91 = new JLabel("");
        m91.setBounds(590, 450, 50, 50);
        getContentPane().add(m91);
        
        m92 = new JLabel("");
        m92.setBounds(640, 450, 50, 50);
        getContentPane().add(m92);
        
        m93 = new JLabel("");
        m93.setBounds(690, 450, 50, 50);
        getContentPane().add(m93);
        
        m94 = new JLabel("");
        m94.setBounds(740, 450, 50, 50);
        getContentPane().add(m94);
        
        m95 = new JLabel("");
        m95.setBounds(790, 450, 50, 50);
        getContentPane().add(m95);
        
        m96 = new JLabel("");
        m96.setBounds(840, 450, 50, 50);
        getContentPane().add(m96);
        
        m97 = new JLabel("");
        m97.setBounds(890, 450, 50, 50);
        getContentPane().add(m97);
        
        m98 = new JLabel("");
        m98.setBounds(940, 450, 50, 50);
        getContentPane().add(m98);
        
        m99 = new JLabel("");
        m99.setBounds(990, 450, 50, 50);
        getContentPane().add(m99);
        
        m100 = new JLabel("");
        m100.setBounds(1040, 450, 50, 50);
        getContentPane().add(m100);
        
        getContentPane().add(jButton1);
        jButton1.setBounds(520, 280, 59, 23);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/BOARD.PNG"))); // NOI18N
        lblBackground.setMaximumSize(new java.awt.Dimension(500, 500));
        lblBackground.setMinimumSize(new java.awt.Dimension(500, 500));
        lblBackground.setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, 0, 500, 500);
        
        
        
        JLabel lblBackground2 = new JLabel();
        lblBackground2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/BOARD.PNG")));
        lblBackground2.setPreferredSize(new Dimension(500, 500));
        lblBackground2.setMinimumSize(new Dimension(500, 500));
        lblBackground2.setMaximumSize(new Dimension(500, 500));
        lblBackground2.setBounds(590, 0, 500, 500);
        getContentPane().add(lblBackground2);

        pack();
        setLocationRelativeTo(null);
        
        
        
        
        
        
 /******************************************LOGIC STARTS HERE************************************************************/       
        
        
        
        JLabel arr[][]={{l1,l2,l3,l4,l5,l6,l7,l8,l9,l10},{l11,l12,l13,l14,l15,l16,l17,l18,l19,l20},
                {l21,l22,l23,l24,l25,l26,l27,l28,l29,l30},{l31,l32,l33,l34,l35,l36,l37,l38,l39,l40},
                {l41,l42,l43,l44,l45,l46,l47,l48,l49,l50},{l51,l52,l53,l54,l55,l56,l57,l58,l59,l60},
                {l61,l62,l63,l64,l65,l66,l67,l68,l69,l70},{l71,l72,l73,l74,l75,l76,l77,l78,l79,l80},
                {l81,l82,l83,l84,l85,l86,l87,l88,l89,l90},{l91,l92,l93,l94,l95,l96,l97,l98,l99,l100}};
        
        
        JLabel arr2[][]={{m1,m2,m3,m4,m5,m6,m7,m8,m9,m10},{m11,m12,m13,m14,m15,m16,m17,m18,m19,m20},
                {m21,m22,m23,m24,m25,m26,m27,m28,m29,m30},{m31,m32,m33,m34,m35,m36,m37,m38,m39,m40},
                {m41,m42,m43,m44,m45,m46,m47,m48,m49,m50},{m51,m52,m53,m54,m55,m56,m57,m58,m59,m60},
                {m61,m62,m63,m64,m65,m66,m67,m68,m69,m70},{m71,m72,m73,m74,m75,m76,m77,m78,m79,m80},
                {m81,m82,m83,m84,m85,m86,m87,m88,m89,m90},{m91,m92,m93,m94,m95,m96,m97,m98,m99,m100}};
  
        I=1;J=0;
        I2=0;J2=1;/*****(I,J) initially 0 i.e. starting position*****/
        
        arr[1][0].setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/SPRITE.PNG")));/**Place SPRITE in (0,0)**/
        arr2[0][1].setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/SPRITE2.PNG")));
        Random r = new Random();	
        jButton1.setText("Move");
        pbestA++;
        pbestB++;
        
        /*---------------ON CLICK MOVE BUTTON LOGIC-------------------*/
        
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
        
            	arr[I][J].setIcon(null);/**When moving set the last (I,J) null and update with present (I,J) after calculation****/
            	arr2[I2][J2].setIcon(null);
            	
            	//int random = (int) r.nextInt(2); /** Generate random number between 1,0 **/
            	
            	//System.out.println(random);
            	
            	
            	double top,bottom,left,right=0;
            	int gbestTop,gbestBottom,gbestLeft,gbestRight=0;
            /******************************LOGIC FOR A**************************************************************/	
            	
            	gbestTop = (9-I+1) + (9-J);
            	gbestBottom = (9-I-1) + (9-J);
            	gbestLeft = (9-I) + (9-J+1);
            	gbestRight = (9-I) + (9-J-1);
            	
            	C = (present[I][J]==2)?1:10;
            	
            	
            	try{
            		top = pbestA + C*Math.random()*(gbestTop - present[I-1][J]);
            	}
            	catch(Exception e){
            		top=99999;
            	}
            	
            	try{
            		bottom = pbestA + C*Math.random()*(gbestBottom - present[I+1][J]);
            	}
            	catch(Exception e){
            		bottom = 99999;
            	}
            	try{
                	left = pbestA + C*Math.random()*(gbestLeft - present[I][J-1]);

            	}
            	catch(Exception e){
            		left = 99999;
            	}
            	
            	
            	try{
            		right = pbestA + C*Math.random()*(gbestRight - present[I][J+1]);
            	}
            	catch(Exception e){
            		right = 99999;
            	}
            	
            	
            	/*
            	if(I==0)
            		top=999999;
            	if(J==0)
            		left=999999;
            	if(I==9)
            		bottom=999999;
            	if(J==9)
            		right=999999;
            	*/
            	System.out.println(gbestTop+"  "+gbestBottom+"  "+gbestLeft+"  "+gbestRight);
            	System.out.println(top+"   "+bottom+"  "+left+"  "+right+"\n\n");
            	
            	
            	if(top<bottom && top<left && top<right)
            		I--;
            	else if(bottom<top && bottom<left && bottom<right)
            		I++;
            	else if(left<top && left<bottom && left<right)
            		J--;
            	else if(right<left && right<top && right<bottom)
            		J++;
            	
            	
            	else if(top<bottom && right!=left){
            		if(top<left && top==right){
            			if(gbestTop<gbestRight)
            				I--;
            			else
            				J++;
            		}
            		if(top<right && top==left){
            			if(gbestTop<gbestLeft)
            				I--;
            			else
            				J--;
            		}
            	}
            	else if(top<left && right!=bottom){
            		if(top<bottom && top==right){
            			if(gbestTop<gbestRight)
            				I--;
            			else
            				J++;
            		}
            		if(top<right && top==bottom){
            			if(gbestTop<gbestBottom)
            				I--;
            			else
            				I++;
            		}
            	}
            	else if(top<right && bottom!=left){
            		if(top<left && top==bottom){
            			if(gbestTop<gbestBottom)
            				I--;
            			else
            				I++;
            		}
            		if(top<bottom && top==left){
            			if(gbestTop<gbestLeft)
            				I--;
            			else
            				J--;
            		}
            	}
            	
            	
            	
            	
            	else if(bottom<top && right!=left){
            		if(bottom<left && bottom==right){
            			if(gbestBottom<gbestRight)
            				I++;
            			else
            				J++;
            		}
            		if(bottom<right && bottom==left){
            			if(gbestBottom<gbestLeft)
            				I++;
            			else
            				J--;
            		}
            	}
            	else if(bottom<left && right!=top){
            		if(bottom<top && bottom==right){
            			if(gbestBottom<gbestRight)
            				I++;
            			else
            				J++;
            		}
            		if(bottom<right && bottom==top){
            			if(gbestBottom<gbestTop)
            				I++;
            			else
            				I--;
            		}
            	}
            	else if(bottom<right && top!=left){
            		if(bottom<left && bottom==top){
            			if(gbestBottom<gbestTop)
            				I++;
            			else
            				I--;
            		}
            		if(bottom<top && bottom==left){
            			if(gbestBottom<gbestLeft)
            				I++;
            			else
            				J--;
            		}
            	}
            	
            	
            	
            	
            	
            	else if(left<bottom && right!=top){
            		if(left<top && left==right){
            			if(gbestLeft<gbestRight)
            				J--;
            			else
            				J++;
            		}
            		if(left<right && left==top){
            			if(gbestLeft<gbestTop)
            				J--;
            			else
            				I--;
            		}
            	}
            	else if(left<top && right!=bottom){
            		if(left<bottom && left==right){
            			if(gbestLeft<gbestRight)
            				J--;
            			else
            				J++;
            		}
            		if(left<right && left==bottom){
            			if(gbestLeft<gbestBottom)
            				J--;
            			else
            				I++;
            		}
            	}
            	else if(left<right && bottom!=top){
            		if(left<top && left==bottom){
            			if(gbestLeft<gbestBottom)
            				J--;
            			else
            				I++;
            		}
            		if(left<bottom && left==top){
            			if(gbestLeft<gbestTop)
            				J--;
            			else
            				I--;
            		}
            	}
            	
            	
            	
            	
            	
            	else if(right<bottom && left!=top){
            		if(right<top && right==left){
            			if(gbestRight<gbestLeft)
            				J++;
            			else
            				J--;
            		}
            		if(right<left && right==top){
            			if(gbestRight<gbestTop)
            				J++;
            			else
            				I--;
            		}
            	}
            	else if(right<top && left!=bottom){
            		if(right<bottom && right==left){
            			if(gbestRight<gbestLeft)
            				J++;
            			else
            				J--;
            		}
            		if(right<left && right==bottom){
            			if(gbestRight<gbestBottom)
            				J++;
            			else
            				I++;
            		}
            	}
            	else if (right<left && bottom!=top){
            		if(right<top && right==bottom){
            			if(gbestRight<gbestBottom)
            				J++;
            			else
            				I++;
            		}
            		if(right<bottom && right==top){
            			if(gbestRight<gbestTop)
            				J++;
            			else
            				I--;
            		}
            	}
            	
            	/*******************************LOGIC FOR B**************************************************/
            	
            	gbestTop = (9-I2+1) + (9-J2);
            	gbestBottom = (9-I2-1) + (9-J2);
            	gbestLeft = (9-I2) + (9-J2+1);
            	gbestRight = (9-I2) + (9-J2-1);
            	
            	C = (present[I2][J2]==2)?1:10;
            	
            	
            	try{
            		top = pbestA + C*Math.random()*(gbestTop - present[I2-1][J2]);
            	}
            	catch(Exception e){
            		top=99999;
            	}
            	
            	try{
            		bottom = pbestA + C*Math.random()*(gbestBottom - present[I2+1][J2]);
            	}
            	catch(Exception e){
            		bottom = 99999;
            	}
            	try{
                	left = pbestA + C*Math.random()*(gbestLeft - present[I2][J2-1]);

            	}
            	catch(Exception e){
            		left = 99999;
            	}
            	
            	
            	try{
            		right = pbestA + C*Math.random()*(gbestRight - present[I2][J2+1]);
            	}
            	catch(Exception e){
            		right = 99999;
            	}
            	
            	
            	/*
            	if(I==0)
            		top=999999;
            	if(J==0)
            		left=999999;
            	if(I==9)
            		bottom=999999;
            	if(J==9)
            		right=999999;
            	*/
            	System.out.println(gbestTop+"  "+gbestBottom+"  "+gbestLeft+"  "+gbestRight);
            	System.out.println(top+"   "+bottom+"  "+left+"  "+right+"\n\n");
            	
            	
            	if(top<bottom && top<left && top<right)
            		I2--;
            	else if(bottom<top && bottom<left && bottom<right)
            		I2++;
            	else if(left<top && left<bottom && left<right)
            		J2--;
            	else if(right<left && right<top && right<bottom)
            		J2++;
            	
            	
            	else if(top<bottom && right!=left){
            		if(top<left && top==right){
            			if(gbestTop<gbestRight)
            				I2--;
            			else
            				J2++;
            		}
            		if(top<right && top==left){
            			if(gbestTop<gbestLeft)
            				I2--;
            			else
            				J2--;
            		}
            	}
            	else if(top<left && right!=bottom){
            		if(top<bottom && top==right){
            			if(gbestTop<gbestRight)
            				I2--;
            			else
            				J2++;
            		}
            		if(top<right && top==bottom){
            			if(gbestTop<gbestBottom)
            				I2--;
            			else
            				I2++;
            		}
            	}
            	else if(top<right && bottom!=left){
            		if(top<left && top==bottom){
            			if(gbestTop<gbestBottom)
            				I2--;
            			else
            				I2++;
            		}
            		if(top<bottom && top==left){
            			if(gbestTop<gbestLeft)
            				I2--;
            			else
            				J2--;
            		}
            	}
            	
            	
            	
            	
            	else if(bottom<top && right!=left){
            		if(bottom<left && bottom==right){
            			if(gbestBottom<gbestRight)
            				I2++;
            			else
            				J2++;
            		}
            		if(bottom<right && bottom==left){
            			if(gbestBottom<gbestLeft)
            				I2++;
            			else
            				J2--;
            		}
            	}
            	else if(bottom<left && right!=top){
            		if(bottom<top && bottom==right){
            			if(gbestBottom<gbestRight)
            				I2++;
            			else
            				J2++;
            		}
            		if(bottom<right && bottom==top){
            			if(gbestBottom<gbestTop)
            				I2++;
            			else
            				I2--;
            		}
            	}
            	else if(bottom<right && top!=left){
            		if(bottom<left && bottom==top){
            			if(gbestBottom<gbestTop)
            				I2++;
            			else
            				I2--;
            		}
            		if(bottom<top && bottom==left){
            			if(gbestBottom<gbestLeft)
            				I2++;
            			else
            				J2--;
            		}
            	}
            	
            	
            	
            	
            	
            	else if(left<bottom && right!=top){
            		if(left<top && left==right){
            			if(gbestLeft<gbestRight)
            				J2--;
            			else
            				J2++;
            		}
            		if(left<right && left==top){
            			if(gbestLeft<gbestTop)
            				J2--;
            			else
            				I2--;
            		}
            	}
            	else if(left<top && right!=bottom){
            		if(left<bottom && left==right){
            			if(gbestLeft<gbestRight)
            				J2--;
            			else
            				J2++;
            		}
            		if(left<right && left==bottom){
            			if(gbestLeft<gbestBottom)
            				J2--;
            			else
            				I2++;
            		}
            	}
            	else if(left<right && bottom!=top){
            		if(left<top && left==bottom){
            			if(gbestLeft<gbestBottom)
            				J2--;
            			else
            				I2++;
            		}
            		if(left<bottom && left==top){
            			if(gbestLeft<gbestTop)
            				J2--;
            			else
            				I2--;
            		}
            	}
            	
            	
            	
            	
            	
            	else if(right<bottom && left!=top){
            		if(right<top && right==left){
            			if(gbestRight<gbestLeft)
            				J2++;
            			else
            				J2--;
            		}
            		if(right<left && right==top){
            			if(gbestRight<gbestTop)
            				J2++;
            			else
            				I2--;
            		}
            	}
            	else if(right<top && left!=bottom){
            		if(right<bottom && right==left){
            			if(gbestRight<gbestLeft)
            				J2++;
            			else
            				J2--;
            		}
            		if(right<left && right==bottom){
            			if(gbestRight<gbestBottom)
            				J2++;
            			else
            				I2++;
            		}
            	}
            	else if (right<left && bottom!=top){
            		if(right<top && right==bottom){
            			if(gbestRight<gbestBottom)
            				J2++;
            			else
            				I2++;
            		}
            		if(right<bottom && right==top){
            			if(gbestRight<gbestTop)
            				J2++;
            			else
            				I2--;
            		}
            	}
            	
            	
            	
                arr[I][J].setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/SPRITE.PNG")));
            	arr2[I2][J2].setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/evade/resources/SPRITE2.PNG")));
            	pbestA++;
            	
            	
            	if(I==9 && J==9){
            		JOptionPane.showMessageDialog(null, "A Won");
            		System.exit(0);
            	}
            	if(I2==9 && J2==9){
            		JOptionPane.showMessageDialog(null, "B Won");
            		System.exit(0);	
            	}
            	/********Write your Logic Here****/
            	
     /****
     ----Equation to be used:

					*v [i,j]=pbest [i,j] + C*rand()*(gbest [i,j]-present[i,j])

					*rand( ) -provide random number between 0 & 1

					*present [i,j] -initial parameter: 2 for free call & 0 for block/defect

					*gbest [i,j] -remaining rectilining distance to target (minimum movement from current to target position)

					*C -run time value : 1 for active & 0 for defective block

					*pbest [i,j] -no of blocks traversed through [i,j] (movement from source to current position)
            	 	
       ******/
            	 
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	
            	/***************END HERE**********************/
 
            	
            }
        });
 
    }// </editor-fold>//GEN-END:initComponents

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePlayFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l10;
    private javax.swing.JLabel l100;
    private javax.swing.JLabel l11;
    private javax.swing.JLabel l12;
    private javax.swing.JLabel l13;
    private javax.swing.JLabel l14;
    private javax.swing.JLabel l15;
    private javax.swing.JLabel l16;
    private javax.swing.JLabel l17;
    private javax.swing.JLabel l18;
    private javax.swing.JLabel l19;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l20;
    private javax.swing.JLabel l21;
    private javax.swing.JLabel l22;
    private javax.swing.JLabel l23;
    private javax.swing.JLabel l24;
    private javax.swing.JLabel l25;
    private javax.swing.JLabel l26;
    private javax.swing.JLabel l27;
    private javax.swing.JLabel l28;
    private javax.swing.JLabel l29;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l30;
    private javax.swing.JLabel l31;
    private javax.swing.JLabel l32;
    private javax.swing.JLabel l33;
    private javax.swing.JLabel l34;
    private javax.swing.JLabel l35;
    private javax.swing.JLabel l36;
    private javax.swing.JLabel l37;
    private javax.swing.JLabel l38;
    private javax.swing.JLabel l39;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l40;
    private javax.swing.JLabel l41;
    private javax.swing.JLabel l42;
    private javax.swing.JLabel l43;
    private javax.swing.JLabel l44;
    private javax.swing.JLabel l45;
    private javax.swing.JLabel l46;
    private javax.swing.JLabel l47;
    private javax.swing.JLabel l48;
    private javax.swing.JLabel l49;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l50;
    private javax.swing.JLabel l51;
    private javax.swing.JLabel l52;
    private javax.swing.JLabel l53;
    private javax.swing.JLabel l54;
    private javax.swing.JLabel l55;
    private javax.swing.JLabel l56;
    private javax.swing.JLabel l57;
    private javax.swing.JLabel l58;
    private javax.swing.JLabel l59;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l60;
    private javax.swing.JLabel l61;
    private javax.swing.JLabel l62;
    private javax.swing.JLabel l63;
    private javax.swing.JLabel l64;
    private javax.swing.JLabel l65;
    private javax.swing.JLabel l66;
    private javax.swing.JLabel l67;
    private javax.swing.JLabel l68;
    private javax.swing.JLabel l69;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel l70;
    private javax.swing.JLabel l71;
    private javax.swing.JLabel l72;
    private javax.swing.JLabel l73;
    private javax.swing.JLabel l74;
    private javax.swing.JLabel l75;
    private javax.swing.JLabel l76;
    private javax.swing.JLabel l77;
    private javax.swing.JLabel l78;
    private javax.swing.JLabel l79;
    private javax.swing.JLabel l8;
    private javax.swing.JLabel l80;
    private javax.swing.JLabel l81;
    private javax.swing.JLabel l82;
    private javax.swing.JLabel l83;
    private javax.swing.JLabel l84;
    private javax.swing.JLabel l85;
    private javax.swing.JLabel l86;
    private javax.swing.JLabel l87;
    private javax.swing.JLabel l88;
    private javax.swing.JLabel l89;
    private javax.swing.JLabel l9;
    private javax.swing.JLabel l90;
    private javax.swing.JLabel l91;
    private javax.swing.JLabel l92;
    private javax.swing.JLabel l93;
    private javax.swing.JLabel l94;
    private javax.swing.JLabel l95;
    private javax.swing.JLabel l96;
    private javax.swing.JLabel l97;
    private javax.swing.JLabel l98;
    private javax.swing.JLabel l99;
    private javax.swing.JLabel lblBackground;
    private JLabel m1;
    private JLabel m2;
    private JLabel m3;
    private JLabel m4;
    private JLabel m5;
    private JLabel m6;
    private JLabel m7;
    private JLabel m8;
    private JLabel m9;
    private JLabel m10;
    private JLabel m11;
    private JLabel m12;
    private JLabel m13;
    private JLabel m14;
    private JLabel m15;
    private JLabel m16;
    private JLabel m17;
    private JLabel m18;
    private JLabel m19;
    private JLabel m20;
    private JLabel m21;
    private JLabel m22;
    private JLabel m23;
    private JLabel m24;
    private JLabel m25;
    private JLabel m26;
    private JLabel m27;
    private JLabel m28;
    private JLabel m29;
    private JLabel m30;
    private JLabel m31;
    private JLabel m32;
    private JLabel m33;
    private JLabel m34;
    private JLabel m35;
    private JLabel m36;
    private JLabel m37;
    private JLabel m38;
    private JLabel m39;
    private JLabel m40;
    private JLabel m41;
    private JLabel m42;
    private JLabel m43;
    private JLabel m44;
    private JLabel m45;
    private JLabel m46;
    private JLabel m47;
    private JLabel m48;
    private JLabel m49;
    private JLabel m50;
    private JLabel m51;
    private JLabel m52;
    private JLabel m53;
    private JLabel m54;
    private JLabel m55;
    private JLabel m56;
    private JLabel m57;
    private JLabel m58;
    private JLabel m59;
    private JLabel m60;
    private JLabel m61;
    private JLabel m62;
    private JLabel m63;
    private JLabel m64;
    private JLabel m65;
    private JLabel m66;
    private JLabel m67;
    private JLabel m68;
    private JLabel m69;
    private JLabel m70;
    private JLabel m71;
    private JLabel m72;
    private JLabel m73;
    private JLabel m74;
    private JLabel m75;
    private JLabel m76;
    private JLabel m77;
    private JLabel m78;
    private JLabel m79;
    private JLabel m80;
    private JLabel m81;
    private JLabel m82;
    private JLabel m83;
    private JLabel m84;
    private JLabel m85;
    private JLabel m86;
    private JLabel m87;
    private JLabel m88;
    private JLabel m89;
    private JLabel m90;
    private JLabel m91;
    private JLabel m92;
    private JLabel m93;
    private JLabel m94;
    private JLabel m95;
    private JLabel m96;
    private JLabel m97;
    private JLabel m98;
    private JLabel m99;
    private JLabel m100;
}

